step(fit)
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
# Make plots
X <- read.table("data/experiment1.csv", sep=",", header=TRUE)
# Convert to t_1 = 0
X$t <- X$t - X$t[1]
par(mfrow=c(5,1), mgp=c(2.2,0.7,0), mar=c(3,3,1,1))
plot(X$t, X$Ta)
plot(X$t, X$Tinner)
plot(X$t, X$Touter)
plot(X$t, X$Pinner)
plot(X$t, X$Pouter)
## ccfs
ccf(X$Tinner, X$Pinner, lag.max=50, main="")
# ----------------------------------------------------------------
# Use the lagdf to make lags
lagdf(X[ ,2:6], 1)
# Add the lags to X
maxlag <- 10
for(i in 1:maxlag){
tmp <- lagdf(X[ ,2:6], i)
names(tmp) <- paste0(names(tmp),".l",i)
X <- cbind(X, tmp)
}
# Fit an ARX
summary(lm("Tinner ~ Tinner.l1 + Pinner.l1 + Touter.l1", data=X))
# ----------------------------------------------------------------
# Function for making a formula for lm
ARX("Tinner", c("Touter"), 1)
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
X <- read.table("data/experiment1.csv", sep=",", header=TRUE)
# Convert to t_1 = 0
X$t <- X$t - X$t[1]
lagdf(X[ ,2:6], 1)
# Add the lags to X
maxlag <- 10
for(i in 1:maxlag){
tmp <- lagdf(X[ ,2:6], i)
names(tmp) <- paste0(names(tmp),".l",i)
X <- cbind(X, tmp)
}
ARX_1_string = ARX("Tinner", c("Ta"), 1)
ARX_1 = lm(ARX_1_string, data=X)
summary(ARX_1)
plot(X$t, X$Tinner, type = "l", xlab = "Time", ylab = "Tinner", main = "Tinner vs. Time")
pred_valuesARX1 = c(NA_character_, fitted.values(ARX_1))
lines(X$t,pred_valuesARX1, col = "red")
legend("topleft", legend = c("Tinner", "ARX(1)"), col = c("black", "red"), lty = 1)
validate(ARX_1)
ccf(ARX_1$residuals, X$Ta)
validate(fit)
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
X <- read.table("data/experiment1.csv", sep=",", header=TRUE)
# Convert to t_1 = 0
X$t <- X$t - X$t[1]
lagdf(X[ ,2:6], 1)
# Add the lags to X
maxlag <- 10
for(i in 1:maxlag){
tmp <- lagdf(X[ ,2:6], i)
names(tmp) <- paste0(names(tmp),".l",i)
X <- cbind(X, tmp)
}
ARX_1_string = ARX("Tinner", c("Ta"), 1)
ARX_1 = lm(ARX_1_string, data=X)
summary(ARX_1)
plot(X$t, X$Tinner, type = "l", xlab = "Time", ylab = "Tinner", main = "Tinner vs. Time")
pred_valuesARX1 = c(NA_character_, fitted.values(ARX_1))
lines(X$t,pred_valuesARX1, col = "red")
legend("topleft", legend = c("Tinner", "ARX(1)"), col = c("black", "red"), lty = 1)
validate(ARX_1)
ccf(ARX_1$residuals, X$Ta)
# Finding relevant variables
first_fit = lm("Tinner ~ 0 + Ta + Pouter + Touter + Pinner", data=X)
summary(first_fit)
validate(first_fit)
step_fit = step(first_fit, direciton="backward", scope="Tinner ~ 0")
second_fit = lm("Tinner ~ 0 + Ta + Touter", data=X)
step_fit = step(second_fit, direciton="backward", scope="Tinner ~ 0")
summary(step_fit)
validate(step_fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:2), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
ccf(fit$residuals, X$t)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
ccf(fit$residuals, X$t)
ccf(fit$residuals, X$Tinner)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:2), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
ccf(fit$residuals, X$Tinner)
validate(fit)
plot(fit$residuals, X$t)
plot(X$t, fit$residuals, xlab = "time", ylab = "Residuals", main = "Residuals vs X$t")
length(X$t)
length(fit$residuals)
X$t
X$t[-1]
X$t[X$t[length(X$t)]]
x_plot <- c(X$t, X$t[X$t[length(X$t) - 1]])
X$t[length(X$t) - 1]
X$t[length(X$t)]
x_plot <- c(X$t, X$t[length(X$t)] + 10, X$t[length(X$t)] + 20)
plot(x_plot, fit$residuals, xlab = "time", ylab = "Residuals", main = "Residuals vs X$t")
length(x_plotx)
length(x_plot)
x_plot = X$t
x_plot <- c(X$t, X$t[length(X$t)] + 10, X$t[length(X$t)] + 20)
plot(x_plot, fit$residuals, xlab = "time", ylab = "Residuals", main = "Residuals vs X$t")
length(x_plot)
length(x_plot), length(fit$residuals)
length(x_plot)
length(fit$residuals)
fit$residuals
length(fit$Tinnerx)
length(fit$Tinner)
length(X$Tinner)
length(X$t)
length(X$Tinner)
length(fit$residuals)
x_test = tail(X, floor(0.2 * nrow(X)))
x_test
shape(x_test)
shape(X_test)
nrow(X_test)
nrow(x_test)
X <- read.table("data/experiment1.csv", sep=",", header=TRUE)
# Convert to t_1 = 0
X$t <- X$t - X$t[1]
lagdf(X[ ,2:6], 1)
# Add the lags to X
maxlag <- 10
for(i in 1:maxlag){
tmp <- lagdf(X[ ,2:6], i)
names(tmp) <- paste0(names(tmp),".l",i)
X <- cbind(X, tmp)
}
ARX_1_string = ARX("Tinner", c("Ta"), 1)
ARX_1 = lm(ARX_1_string, data=X)
summary(ARX_1)
plot(X$t, X$Tinner, type = "l", xlab = "Time", ylab = "Tinner", main = "Tinner vs. Time")
pred_valuesARX1 = c(NA_character_, fitted.values(ARX_1))
lines(X$t,pred_valuesARX1, col = "red")
legend("topleft", legend = c("Tinner", "ARX(1)"), col = c("black", "red"), lty = 1)
validate(ARX_1)
ccf(ARX_1$residuals, X$Ta)
# Finding relevant variables
first_fit = lm("Tinner ~ 0 + Ta + Pouter + Touter + Pinner", data=X)
summary(first_fit)
# Finding relevant variables
first_fit = lm("Tinner ~ 0 + Ta + Pouter + Touter + Pinner", data=X)
summary(first_fit)
validate(first_fit)
step_fit = step(first_fit, direciton="backward", scope="Tinner ~ 0")
second_fit = lm("Tinner ~ 0 + Ta + Touter", data=X)
second_fit = lm("Tinner ~ 0 + Ta + Touter + Pinner", data=X)
step_fit = step(second_fit, direciton="backward", scope="Tinner ~ 0")
summary(step_fit)
validate(step_fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
, "Touter
, "Touter
, "Touter
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"m "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
x_plot = X$t
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
x_plot = X$t
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter",), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
"Pouter"
"Pouter"
"Pouter"
"Pouter"
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Ta", "Touter", "Pouter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Finding relevant variables
first_fit = lm("Tinner ~ 0 + Ta + Pouter + Touter + Pinner", data=X)
summary(first_fit)
validate(first_fit)
step_fit = step(first_fit, direciton="backward", scope="Tinner ~ 0")
second_fit = lm("Tinner ~ 0 + Ta + Touter + Pinner", data=X)
step_fit = step(second_fit, direciton="backward", scope="Tinner ~ 0")
summary(step_fit)
validate(step_fit)
third_fit = lm("Tinner ~ 0 + Ta + Touter + Pouter", data=X)
step_fit = step(third_fit, direciton="backward", scope="Tinner ~ 0")
summary(step_fit)
validate(step_fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:2), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:4), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:2), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
cor(X$Pouter, X$Touter)
summary(step_fit)
summary(step_fit)
validate(step_fit)
second_fit = lm("Tinner ~ 0 + Ta + Touter + Pinner", data=X)
step_fit = step(second_fit, direciton="backward", scope="Tinner ~ 0")
summary(step_fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
x_plot = X$t
plot(x_plot, fit$residuals, xlab = "time", ylab = "Residuals", main = "Residuals vs X$t")
x_plot <- c(X$t, X$t[length(X$t)] + 10, X$t[length(X$t)] + 20)
plot(x_plot, fit$residuals, xlab = "time", ylab = "Residuals", main = "Residuals vs X$t")
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
length(X$t)
length(X$Tinner)
length(fit$residuals)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:4), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Touter"), 1:2), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:8), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Tinner"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit AR model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:3), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:8), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter", "Pouter"), 1:8), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:6), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:10
), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k = 0.01)
summary(fit)
fit
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k = 0.001)
summary(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0")
summary(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.0005)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
AIC(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
AIC(fit)
- AIC(fit)
# Fit ARX model
fit = xstep(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:4), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Touter"), 1:4), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:4), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner"), 1:4), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
summary(fit)
AIC(fit)
a[:2]
a = "HOla"
a[:2]
a[:]
a = "HOla"
a[:]
a[1:2]
a = "HOla"
a[1:2]
A = "Hello World!"
A[1:4]
a[1]
a = "HOla"
a[1]
a[2]
a[100]
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
, "Ta")
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
a = AIC(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
a = AIC(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
a = AIC(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
a = AIC(fit)
# Fit ARX model
fit = step(lm(ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5), data=X), direction="backward", scope="Tinner ~ 0", k=0.05)
summary(fit)
validate(fit)
fit
ARX("Tinner", c("Pinner", "Ta", "Touter"), 1:5)
annova(fit)
anova(fit)
summary(fit)
prune_model <- function(model, alpha=0.05, AIC_error) {
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
View(ARX)
View(ARX)
View(ARX)
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
for(i in 1:length(files)) source(files[i])
X <- read.table("data/experiment1.csv", sep=",", header=TRUE)
# Convert to t_1 = 0
X$t <- X$t - X$t[1]
lagdf(X[ ,2:6], 1)
View(ARX)
file
filea
files
## Source the files in the "functions" folder
# "/Users/terriblepollo/Desktop/Exchange Courses/Time Series Analysis/Assignments/Assignment 3"
files <- dir("functions",full.names=TRUE)
files
